# -*- coding: utf-8 -*-
"""Quiz 4_Dikri Hidayat_1197050030_Kelas D.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1i5_Rzx6J2Au6rL_v7ow97KZakl_mV5WF

Nama : Dikri Hidayat
NIM  : 1197050030
Kelas Teori Dan Praktikum Mesin D

Disini Prediksi Kadar Emisi Karbon menggunakan Linear Regresion dan Multiple Regresion
"""

from google.colab import files
uploaded = files.upload()

import pandas as pd
import matplotlib.pyplot as plt
import numpy as np
from sklearn import linear_model
import pandas as pd
df=pd.read_csv("FuelConsumption.csv")
print(df)

df.isnull()

df.isnull().sum()

wanted_data = df[['ENGINESIZE','CYLINDERS','FUELCONSUMPTION_CITY','CO2EMISSIONS']]
wanted_data

wanted_data.isnull().sum()

plt.scatter(wanted_data.FUELCONSUMPTION_CITY, wanted_data.CO2EMISSIONS,color="blue")
plt.xlabel("FuelConsumption")
plt.ylabel("CO2 Emissions")
plt.show()

plt.scatter(wanted_data.ENGINESIZE, wanted_data.CO2EMISSIONS,color="blue")
plt.xlabel("EngineSize")
plt.ylabel("CO2 Emissions")
plt.show()

plt.scatter(wanted_data.CYLINDERS, wanted_data.CO2EMISSIONS,color="blue")
plt.xlabel("Cylinders")
plt.ylabel("CO2 Emissions")
plt.show()

wanted_data.hist()
plt.show()

wanted_data

msk = np.random.rand(len(wanted_data)) < 0.8
train = wanted_data[msk]
test = wanted_data[~msk]

train

test

plt.scatter(train.ENGINESIZE,train.CO2EMISSIONS,color='blue')
plt.xlabel('Engine Size')
plt.ylabel('CO2Emissions')
plt.show()

regression = linear_model.LinearRegression()
train_x = np.asanyarray(train[['ENGINESIZE']])
train_y = np.asanyarray(train[['CO2EMISSIONS']])
regression.fit(train_x,train_y)
print('Coefficients: ',regression.coef_)
print('Intercept: ',regression.intercept_)

plt.scatter(train.ENGINESIZE, train.CO2EMISSIONS,  color='blue')
plt.plot(train_x, regression.coef_[0][0]*train_x + regression.intercept_[0], '-r')
plt.xlabel("Engine size")
plt.ylabel("Co2Emission")

from sklearn.metrics import r2_score

test_x = np.asanyarray(test[['ENGINESIZE']])
test_y = np.asanyarray(test[['CO2EMISSIONS']])
test_y_hat = regression.predict(test_x)

print("Mean absolute error: %.2f" % np.mean(np.absolute(test_y_hat - test_y)))
print("Residual sum of squares (MSE): %.2f" % np.mean((test_y_hat - test_y) **2))
print("R2-score: %.2f" % r2_score(test_y_hat , test_y))

print("Predicted Co2 emission: " , test_y_hat )